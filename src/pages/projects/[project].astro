---
import { Image } from "astro:assets";
import type { GetStaticPaths } from "astro";
import type { ImageMetadata } from "astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import Layout from "../../layouts/Layout.astro";
import projects from "./_metadata.json";

type Project = (typeof projects)[number];

// Import all project logos
const logoImports = import.meta.glob<{ default: ImageMetadata }>(
  "../../assets/projects/*.{svg,png}",
  {
    eager: true,
  }
);

// Import all screenshots
const screenshotImports = import.meta.glob<{ default: ImageMetadata }>(
  "/public/*.{png,jpg}",
  {
    eager: true,
  }
);

export const getStaticPaths = (() => {
  return projects
    .filter((p) => p.show)
    .map((project) => {
      return {
        params: {
          project: project.slug,
        },
      };
    });
}) satisfies GetStaticPaths;

const { project } = Astro.params;
const data: Project | undefined = projects.find((p) => p.slug === project);

// Prepare image sources
// Handle both string and object logo formats for backward compatibility
const lightLogo =
  typeof data?.logo === "string" ? data?.logo : data?.logo?.light;
const darkLogo = typeof data?.logo === "string" ? data?.logo : data?.logo?.dark;

const lightLogoPath = lightLogo ? `../../assets/projects/${lightLogo}` : null;
const darkLogoPath = darkLogo ? `../../assets/projects/${darkLogo}` : null;

const lightLogoImage = lightLogoPath
  ? logoImports[lightLogoPath]?.default
  : null;
const darkLogoImage = darkLogoPath ? logoImports[darkLogoPath]?.default : null;

const screenshotPath = data?.screenshot ? `/public/${data.screenshot}` : null;
const screenshotImage = screenshotPath
  ? screenshotImports[screenshotPath]?.default
  : null;

export const prerender = true;
---

<Layout
  title={`${data?.name || "Project"} | Michael Eduaveâ€”Software Engineer`}
  description={data?.description || ""}
>
  <Header name="Michael Eduave" description="Software Engineer" />
  <main class="container mx-auto px-4 py-8">
    <div class="flex flex-col gap-8">
      <div class="flex flex-col md:flex-row items-center md:items-start gap-6">
        <div class="flex-shrink-0">
          {
            lightLogoImage && (
              <Image
                height="120"
                width="120"
                src={lightLogoImage}
                alt={`${data?.name} logo (light mode)`}
                class="rounded-lg block dark:hidden"
              />
            )
          }
          {
            darkLogoImage ? (
              <Image
                height="120"
                width="120"
                src={darkLogoImage}
                alt={`${data?.name} logo (dark mode)`}
                class="rounded-lg hidden dark:block"
              />
            ) : (
              lightLogoImage && (
                // Fallback to light logo if dark logo is missing
                <Image
                  height="120"
                  width="120"
                  src={lightLogoImage}
                  alt={`${data?.name} logo (fallback)`}
                  class="rounded-lg hidden dark:block"
                />
              )
            )
          }
        </div>
        <div class="flex-1 text-center md:text-left">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{data?.name}</h1>
          <p class="text-lg text-slate-600 dark:text-slate-300 mb-4">
            {data?.fullDescription || data?.description}
          </p>
          {
            data?.url && (
              <a
                href={data.url}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-block px-4 py-2 bg-blue-600 dark:bg-blue-700 hover:bg-blue-700 dark:hover:bg-blue-600 text-white rounded-lg allow-transition"
              >
                Visit Project
              </a>
            )
          }
        </div>
      </div>

      <div class="grid md:grid-cols-2 gap-8">
        {
          screenshotImage && (
            <div class="w-full">
              <h2 class="text-2xl font-semibold mb-4">Preview</h2>
              <div class="relative rounded-lg overflow-hidden shadow-lg dark:shadow-[0_4px_6px_-1px_rgba(255,255,255,0.05),0_2px_4px_-2px_rgba(255,255,255,0.05)]">
                <Image
                  class="w-full h-auto"
                  height="900"
                  width="1600"
                  src={screenshotImage}
                  alt={`${data?.name} preview screenshot`}
                />
              </div>
            </div>
          )
        }

        {
          data?.tech && data.tech.length > 0 && (
            <div class="w-full">
              <h2 class="text-2xl font-semibold mb-4">Tech Stack</h2>
              <div class="flex flex-wrap gap-2">
                {data.tech.map((t) => (
                  <span class="px-3 py-1 bg-slate-100 dark:bg-dark-bg/80 text-slate-700 dark:text-slate-200 rounded-full border dark:border-slate-700">
                    {t}
                  </span>
                ))}
              </div>
            </div>
          )
        }
      </div>
    </div>
  </main>
  <Footer />
</Layout>
