---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { clsx } from "clsx";
import projectMetadata from "../pages/projects/_metadata.json";

type Project = (typeof projectMetadata)[number];

// Import all project logos
const logoImports = import.meta.glob<{ default: ImageMetadata }>(
  "../assets/projects/*.{svg,png}",
  {
    eager: true,
  }
);
export const projects = projectMetadata;
---

<div class="w-full">
  <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
    {
      projects
        .filter((p) => p.show)
        .map(({ name, status, logo, description, tech, url }) => {
          // Handle both string and object logo formats for backward compatibility
          const lightLogo = typeof logo === "string" ? logo : logo?.light;
          const darkLogo = typeof logo === "string" ? logo : logo?.dark;

          const lightLogoPath = lightLogo
            ? `../assets/projects/${lightLogo}`
            : null;
          const darkLogoPath = darkLogo
            ? `../assets/projects/${darkLogo}`
            : null;

          const lightLogoImage = lightLogoPath
            ? logoImports[lightLogoPath]?.default
            : null;
          const darkLogoImage = darkLogoPath
            ? logoImports[darkLogoPath]?.default
            : null;

          return (
            <div class="block allow-transition hover:scale-[1.02] bg-white/50 dark:bg-dark-bg/90 rounded-xl p-4 border border-slate-200 dark:border-slate-700 shadow-[0_2px_4px_rgba(0,0,0,0.05),0_-1px_2px_0_rgba(0,0,0,0.02)] dark:shadow-[0_4px_6px_-1px_rgba(255,255,255,0.05),0_2px_4px_-2px_rgba(255,255,255,0.05),0_-1px_3px_0_rgba(255,255,255,0.03)]">
              <div class="flex flex-col items-center text-center">
                <div class="h-20 w-20 mb-4 relative">
                  {lightLogoImage && (
                    <Image
                      class="border-0 object-contain block dark:hidden"
                      height="80"
                      width="80"
                      src={lightLogoImage}
                      alt={`${name} logo (light mode)`}
                    />
                  )}
                  {darkLogoImage ? (
                    <Image
                      class="border-0 object-contain hidden dark:block"
                      height="80"
                      width="80"
                      src={darkLogoImage}
                      alt={`${name} logo (dark mode)`}
                    />
                  ) : (
                    lightLogoImage && (
                      // Fallback to light logo if dark logo is missing
                      <Image
                        class="border-0 object-contain hidden dark:block"
                        height="80"
                        width="80"
                        src={lightLogoImage}
                        alt={`${name} logo (fallback)`}
                      />
                    )
                  )}
                </div>
                <div class="text-2xl font-semibold mb-2 text-slate-900 dark:text-white">
                  {name}
                </div>
                <p class="text-sm text-slate-600 dark:text-gray-300 mb-2">
                  {description}
                </p>
                <span class="text-sm mb-3 text-slate-700 dark:text-slate-300">
                  Status:{" "}
                  <span
                    class={clsx(
                      "font-medium",
                      status === "Legacy" &&
                        "text-slate-600 dark:text-slate-300",
                      status === "In Development" &&
                        "text-green-600 dark:text-green-300"
                    )}
                  >
                    {status}
                  </span>
                </span>
                {tech && tech.length > 0 && (
                  <div class="flex flex-wrap gap-1 justify-center">
                    {tech.map((t) => (
                      <span class="text-xs px-2 py-1 bg-slate-100 dark:bg-dark-bg/80 text-slate-700 dark:text-slate-200 rounded-full border dark:border-slate-700">
                        {t}
                      </span>
                    ))}
                  </div>
                )}
                {url && (
                  <a
                    href={url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="mt-3 text-sm text-blue-600 dark:text-blue-400 hover:text-blue-500 dark:hover:text-blue-300 allow-transition"
                  >
                    Visit Project â†’
                  </a>
                )}
              </div>
            </div>
          );
        })
    }
  </div>
</div>
